upstream splunk_backend {
    server splunk:8000;
}

upstream apache_backend {
    server apache:80;
}

upstream log_generator_backend {
    server log-generator:5000;
}

server {
    listen 80;

    location /debug {
        return 200 "Nginx is working!\nTime: $time_iso8601\n";
        add_header Content-Type text/plain;
    }

    location / {
        proxy_pass http://apache_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /splunk-test {
        proxy_pass http://splunk:8000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
    }

    # Redirect /monitoring (no trailing slash) to /monitoring/ (with trailing slash)
    location = /monitoring {
        return 301 $scheme://$host/monitoring/;
    }

    location /monitoring/ {
        # Strip /monitoring prefix before proxying to Splunk
        rewrite ^/monitoring(/.*)$ $1 break;

        proxy_pass http://splunk_backend/;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_connect_timeout 10s;
        proxy_send_timeout 10s;
        proxy_read_timeout 30s;

        # Disable automatic Location header rewrites to avoid redirect loops
        proxy_redirect off;
    }

    location /test/ {
        rewrite ^/test/?(.*) /$1 break;
        proxy_pass http://log_generator_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
